var P=Object.defineProperty;var I=(e,s,a)=>s in e?P(e,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[s]=a;var d=(e,s,a)=>I(e,typeof s!="symbol"?s+"":s,a);import{b as m}from"./index-BNzDLOmD.js";import{b as l,M as A}from"./mp3-encoder-CoEoOaGq.js";import"./index-DGAt_zbA.js";import{m as M}from"./mp3-worker-factory-DcCHG1pn.js";var h=(e=>(e[e.noActiveTabPermission=1]="noActiveTabPermission",e[e.drmProtected=2]="drmProtected",e[e.other=3]="other",e))(h||{}),f=(e=>(e[e.timedAudioRecordingInProgress=1]="timedAudioRecordingInProgress",e[e.other=2]="other",e))(f||{});class y extends Error{}class T{constructor(){d(this,"recording");d(this,"recorder");d(this,"stream");d(this,"blobPromise");d(this,"timeoutId");d(this,"timeoutResolve");this.recording=!1,this.recorder=null,this.stream=null,this.blobPromise=null}startWithTimeout(s,a,o,i=!1){return new Promise(async(r,n)=>{try{if(this.recording){console.error("Already recording, cannot start with timeout."),n("Already recording");return}await this.start(s,i),o(),this.timeoutResolve=r,this.timeoutId=setTimeout(async()=>{this.timeoutId=void 0,r(await this.stop(i))},a)}catch(t){n(t)}})}start(s,a=!1){return new Promise((o,i)=>{if(this.recording){i("Already recording, cannot start");return}try{const r=new MediaRecorder(s),n=[];if(r.ondataavailable=t=>{n.push(t.data)},this.blobPromise=new Promise((t,c)=>{r.onstop=b=>{t(new Blob(n))}}),r.start(),!a){const t=new AudioContext;t.createMediaStreamSource(s).connect(t.destination)}this.recorder=r,this.recording=!0,this.stream=s,o(void 0)}catch(r){i(r)}})}async stopSafely(s=!1){var a,o,i,r;if(this.recording=!1,(a=this.recorder)==null||a.stop(),this.recorder=null,s||((i=(o=this.stream)==null?void 0:o.getTracks())==null||i.forEach(n=>n.stop()),this.stream=null),this.blobPromise!==null){const n=await this.blobPromise;this.blobPromise=null;const t=await l(await n.arrayBuffer());this.timeoutId!==void 0&&(clearTimeout(this.timeoutId),this.timeoutId=void 0,(r=this.timeoutResolve)==null||r.call(this,t),this.timeoutResolve=void 0)}}async stop(s=!1){var i,r,n,t;if(!this.recording)throw new Error("Not recording, unable to stop");this.recording=!1,(i=this.recorder)==null||i.stop(),this.recorder=null,s||((n=(r=this.stream)==null?void 0:r.getTracks())==null||n.forEach(c=>c.stop()),this.stream=null);const a=await this.blobPromise;this.blobPromise=null;const o=await l(await a.arrayBuffer());if(this.timeoutId!==void 0)throw clearTimeout(this.timeoutId),this.timeoutId=void 0,(t=this.timeoutResolve)==null||t.call(this,o),this.timeoutResolve=void 0,new y;return o}}const u=new T,g=async(e,s,a)=>{if(a){const i=await(await fetch("data:audio/webm;base64,"+e)).blob(),r=await A.encode(i,M);e=l(await r.arrayBuffer())}const o={sender:"asbplayer-offscreen-document",message:{command:"audio-base64",base64:e,requestId:s}};m.runtime.sendMessage(o)},w=async e=>navigator.mediaDevices.getUserMedia({audio:{mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e}}});let p;const v=e=>{let s;return e instanceof DOMException&&e.name==="AbortError"?s=h.noActiveTabPermission:s=h.other,{started:!1,error:{code:s,message:e.message}}};window.onload=async()=>{const e=(s,a,o)=>{if(s.sender==="asbplayer-extension-to-offscreen-document")switch(s.message.command){case"start-recording-audio-with-timeout":const i=s.message;return w(i.streamId).then(t=>u.stopSafely().then(()=>u.startWithTimeout(t,i.timeout,()=>{o({started:!0})}))).then(t=>g(t,i.requestId,i.encodeAsMp3)).catch(t=>{console.error(t),o(v(t))}),!0;case"start-recording-audio":const r=s.message;return p=r.requestId,w(r.streamId).then(t=>u.stopSafely().then(()=>u.start(t))).then(()=>o({started:!0})).catch(t=>{console.error(t),o(v(t))}),!0;case"stop-recording-audio":const n=s.message;return u.stop().then(t=>{o({stopped:!0}),g(t,p,n.encodeAsMp3)}).catch(t=>{let c;t instanceof y?c=f.timedAudioRecordingInProgress:(console.error(t),c=f.other);const b={stopped:!1,error:{code:c,message:t.message}};o(b)}),!0}};m.runtime.onMessage.addListener(e),window.addEventListener("beforeunload",s=>{m.runtime.onMessage.removeListener(e)})};
